---
---

<div class="container form-container flex-center flex-col">
  <input
    type="file"
    name=""
    id="files"
    max="3"
    multiple
    class="file-upload-input"
  />
  <ol class="files-container"></ol>
</div>

<script type="text/javascript" defer>
  let fileList = [];
  const btn = document.getElementsByClassName("submit-btn")[0];
  try {
    fileList = JSON.parse(sessionStorage.getItem("fileList")) || [];
  } catch {}
  const filesContainerElement = document.querySelector(".files-container");
  const fileUploadInputElement = document.querySelector(".file-upload-input");

  if (fileList) {
    fileList.forEach((file) => {
      addFileElement(file);
    });
  }

  window.addEventListener("DOMContentLoaded", () => {
    enableButton();
  });

  function enableButton() {
    if (fileList.length > 0) {
      if (btn) {
        btn.removeAttribute("disabled");
      }
    } else {
      btn.setAttribute("disabled", "true");
    }
  }

  fileUploadInputElement.addEventListener("change", async (e) => {
    const MAX_FILE_SIZE = 524288000; // 500 MB
    for (let i = 0; i < e.target.files.length; i++) {
      const files = e.target.files;

      for (let file of files) {
        if (files[i].size > MAX_FILE_SIZE) {
          alert("File Size is too large");
          fileUploadInputElement.value = "";
          return;
        }

        let url = URL.createObjectURL(file);
        fileList.push({
          name: file.name,
          url: url,
        });
        addFileElement({
          name: file.name,
          url: url,
        });
        await uploadFile(file, url);
        sessionStorage.setItem("fileList", JSON.stringify(fileList));

        if (fileList.length === 3) {
          alert("Reached File Limit");
          fileUploadInputElement.setAttribute("disabled", "true");
          fileUploadInputElement.style.display = "none";
          return;
        } else {
          setTimeout(() => {
            fileUploadInputElement.value = "";
          }, 200);
        }
      }
      enableButton();
    }
  });

  function addFileElement(file) {
    let fileContainer = document.createElement("article");
    fileContainer.classList.add("loading-file");
    fileContainer.id = file.url;
    fileContainer.innerHTML = `
      <span class="progress-container">
        <progress value="0" max="100"></progress>
        <span>
          <svg
            class="svg-md"
            width="100%"
            height="100%"
            viewBox="0 0 30 30"
            fill="none"
            xmlns="http://www.w3.org/2000/svg"
            onclick="removeFile('${file.url}')"
          id="${file.url}"
          >
            <path
              d="M18.5356 18.5061L11.4645 11.435"
              stroke="white"
              stroke-linecap="round"></path>
            <path
              d="M11.4644 18.5061L18.5355 11.435"
              stroke="white"
              stroke-linecap="round"></path>
            <path
              fill-rule="evenodd"
              clip-rule="evenodd"
              d="M7.92893 22.0416C11.8342 25.9468 18.1658 25.9468 22.0711 22.0416C25.9763 18.1363 25.9763 11.8047 22.0711 7.89944C18.1658 3.99419 11.8342 3.99419 7.92893 7.89944C4.02369 11.8047 4.02369 18.1363 7.92893 22.0416Z"
              stroke="white"></path>
          </svg>
        </span>
      </span>

      <span>
        <svg
          class="svg-file-icon"
          width="100%"
          height="100%"
          viewBox="0 0 46 38"
          fill="none"
          xmlns="http://www.w3.org/2000/svg"
        >
          <path
            d="M6 0C2.686 0 0 2.686 0 6V32C0 35.314 2.686 38 6 38H40C43.314 38 46 35.314 46 32V6C46 2.686 43.314 0 40 0H6ZM6 4H40C41.105 4 42 4.895 42 6V28.4336L32.6816 20.0547C31.1586 18.6847 28.8442 18.6865 27.3242 20.0605L19.4023 27.2188L15.6094 23.9746C14.1084 22.6906 11.8944 22.6954 10.3984 23.9844L4 29.4961V6C4 4.895 4.895 4 6 4ZM14 10C11.791 10 10 11.791 10 14C10 16.209 11.791 18 14 18C16.209 18 18 16.209 18 14C18 11.791 16.209 10 14 10Z"
            fill="currentColor"></path>
        </svg>
      </span>
      <p class="file-name">${file.name}</p>
      <span>
        <svg
          class="svg-md"
          width="100%"
          height="100%"
          viewBox="0 0 30 30"
          fill="none"
          xmlns="http://www.w3.org/2000/svg"
          onclick="removeFile('${file.url}')"
          id="${file.url}"
          class="border-dev"
        >
          <path
            d="M18.5356 18.5061L11.4645 11.435"
            stroke="white"
            stroke-linecap="round"></path>
          <path
            d="M11.4644 18.5061L18.5355 11.435"
            stroke="white"
            stroke-linecap="round"></path>
          <path
            fill-rule="evenodd"
            clip-rule="evenodd"
            d="M7.92893 22.0416C11.8342 25.9468 18.1658 25.9468 22.0711 22.0416C25.9763 18.1363 25.9763 11.8047 22.0711 7.89944C18.1658 3.99419 11.8342 3.99419 7.92893 7.89944C4.02369 11.8047 4.02369 18.1363 7.92893 22.0416Z"
            stroke="white"></path>
        </svg>
      </span>
      `;
    filesContainerElement.appendChild(fileContainer);
  }

  function removeFile(id) {
    let fileElement = document.getElementById(id);
    fileList = fileList.filter((file) => file.url !== id);
    sessionStorage.setItem("fileList", JSON.stringify(fileList));
    fileElement.classList.add("removing-file");
    setTimeout(() => {
      fileElement.remove();
    }, 500);
    enableButton();
  }
  async function uploadFile(file, url) {
    let hostId = localStorage.getItem("hostId");

    if (typeof hostId !== "string" || hostId instanceof String) {
      return;
    }

    if (!hostId) return;

    let formData = new FormData();
    formData.append("file", file);
    let xhr = new XMLHttpRequest();
    xhr.open("POST", `/api/upload/${hostId}`);
    xhr.upload.addEventListener("progress", (e) => {
      let progress = Math.round((e.loaded / e.total) * 100);
      let fileElement = document.getElementById(url);
      fileElement.querySelector("progress").value = progress;
      if (progress === 100) {
        fileElement.classList.remove("loading-file");
        fileElement
          .querySelector(`article[id='${url}'] .progress-container`)
          .remove();
      }
    });
    xhr.send(formData);
    xhr.addEventListener("load", function () {
      if (xhr.status !== 200) {
        removeFile(url);
        return alert(xhr.response)
      }
    });
  }
</script>
